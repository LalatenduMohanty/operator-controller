project_name: operator-controller
release:
  disable: '{{ ne .Env.ENABLE_RELEASE_PIPELINE "true" }}'
  extra_files:
    - glob: catalogd.yaml
    - glob: ./config/base/default/clustercatalogs/default-catalogs.yaml
    - glob: install.sh
  header: |
    ## Installation
    ```bash
    curl -L -s https://github.com/operator-framework/catalogd/releases/download/{{ .Tag }}/install.sh | bash -s
    ```
builds:
  - id: manager
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - ppc64le
      - s390x
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - linux_amd64_v1
      - linux_arm64
      - linux_ppc64le
      - linux_s390x
    dir: .
    main: ./cmd/manager/
    binary: manager
    builder: go
    mod_timestamp: '{{ .CommitTimestamp }}'
    gobinary: go
    command: build
    ldflags:
      - '{{ .Env.GO_BUILD_LDFLAGS }}'
    tags:
      - '{{ .Env.GO_BUILD_TAGS }}'
    asmflags:
      - '{{ .Env.GO_BUILD_ASMFLAGS }}'
    gcflags:
      - '{{ .Env.GO_BUILD_GCFLAGS }}'
archives:
  - id: default
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    format: tar.gz
    files:
      - src: license*
      - src: LICENSE*
      - src: readme*
      - src: README*
      - src: changelog*
      - src: CHANGELOG*
snapshot:
  name_template: '{{ .Version }}-SNAPSHOT-{{ .ShortCommit }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  algorithm: sha256
dockers:
  - goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - '{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-amd64'
    build_flag_templates:
      - --platform=linux/amd64
    use: buildx
  - goos: linux
    goarch: arm64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - '{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-arm64'
    build_flag_templates:
      - --platform=linux/arm64
    use: buildx
  - goos: linux
    goarch: ppc64le
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - '{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-ppc64le'
    build_flag_templates:
      - --platform=linux/ppc64le
    use: buildx
  - goos: linux
    goarch: s390x
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - '{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-s390x'
    build_flag_templates:
      - --platform=linux/s390x
    use: buildx
docker_manifests:
  - name_template: '{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}'
    image_templates:
      - '{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-amd64'
      - '{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-arm64'
      - '{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-ppc64le'
      - '{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-s390x'
    use: docker
changelog:
  format: '{{ .SHA }}: {{ .Message }} ({{ with .AuthorUsername }}@{{ . }}{{ else }}{{ .AuthorName }} <{{ .AuthorEmail }}>{{ end }})'
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod tidy
    - go mod download
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ mdv2escape .ProjectName }} {{ mdv2escape .Tag }} is out{{ mdv2escape "!" }} Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
  bluesky:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
